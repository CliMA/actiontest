name: Test action on PR comment
on:
  issue_comment:
    types: [created]

jobs:
  test-action:
    if: ${{ github.event.issue.pull_request &&
            ( github.event.comment.author_association == 'OWNER' ||
              github.event.comment.author_association == 'MEMBER' ||
              github.event.comment.author_association == 'COLLABORATOR' ) &&
            contains(github.event.comment.body, '```buildkite') }}
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Regex match
        uses: actions-ecosystem/action-regex-match@v2.0.0
        id: regex-match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^```buildkite\r?\n([\s\S]*?)```'
          flags: gm
      - name: Dump Regex match
        env:
          REGEX_MATCH: "{\"PIPELINE\": ${{ toJson(steps.regex-match.outputs.group1) }} }"
        run: echo "$REGEX_MATCH"

      - uses: octokit/request-action@v2.0.26
        id: get_pr
        with:
          route: GET /repos/{repository}/pulls/{pull_number}
          repository: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Trigger Buildkite Pipeline
        id: buildkite
        uses: CliMA/buildkite-pipeline-action@master
        with:
          access_token: ${{ secrets.BUILDKITE }}
          pipeline: 'clima/actiontest'
          commit: ${{ fromJson(steps.get_pr.outputs.data).head.sha }}
          message: ":github: Triggered by PR comment ${{ github.event.comment.html_url }}"
          env: '{"PIPELINE": ${{ toJson(steps.regex-match.outputs.group1) }} }'
          async: true

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: "Build created: ${{ steps.buildkite.outputs.web_url }}"
        
